import os
from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î LINE Access Token
LINE_ACCESS_TOKEN = os.getenv("LINE_CHANNEL_ACCESS_TOKEN")

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà LINE
def send_line_message(reply_token, text):
    url = "https://api.line.me/v2/bot/message/reply"
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {LINE_ACCESS_TOKEN}"
    }
    payload = {
        "replyToken": reply_token,
        "messages": [{"type": "text", "text": text}]
    }
    response = requests.post(url, headers=headers, json=payload)
    return response.json()

# ‚úÖ Webhook ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ POST ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
@app.route("/webhook", methods=["POST"])
def webhook():
    try:
        data = request.get_json()
        print(f"üõ† DEBUG: Received Data: {data}")  # Debug log

        # ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ events ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not data or "events" not in data or len(data["events"]) == 0:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ events ‡πÉ‡∏ô request")
            return jsonify({"error": "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ events ‡πÉ‡∏ô request"}), 400

        event = data["events"][0]  # ‚úÖ ‡∏î‡∏∂‡∏á Event ‡πÅ‡∏£‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)

        # ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if "message" not in event or "text" not in event["message"]:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ")
            return jsonify({"error": "‚ùå ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ"}), 400

        text = event["message"]["text"]
        reply_token = event["replyToken"]

        # ‚úÖ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
        response_text = f"üîÑ ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤: {text}"
        send_line_message(reply_token, response_text)

        return jsonify({"status": "‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"}), 200

    except Exception as e:
        print(f"‚ùå Error: {e}")
        return jsonify({"error": "‚ùå Internal Server Error"}), 500

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà (‡πÉ‡∏ä‡πâ GET)
@app.route("/", methods=["GET"])
def home():
    return "‚úÖ LINE Webhook ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥", 200

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    print(f"‚úÖ LINE Webhook ‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï {port}...")
    app.run(host="0.0.0.0", port=port)
